[tool.poetry]
name = "discord-app-example"
version = "0.1.0"
description = ""
authors = ["thijsfranck <thijsfranck@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
discord-py = { extras = ["voice"], version = "^2.4.0" }
python-dotenv = "^1.0.1"

[tool.poetry.dev-dependencies]
mike = "^2.1.2"
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.28"
pre-commit = "^3.7.1"
pytest = "^8.2.2"
ruff = "^0.5.1"
pymdown-extensions = "^10.8.1"

[tool.pyright]
typeCheckingMode = "basic"
pythonVersion = "3.12"
reportUnnecessaryTypeIgnoreComment = "error"

[tool.ruff]
select = ["ALL"]
ignore = [
    # Self and cls do not require annotations.
    "ANN101",
    "ANN102",
    # Module level docstrings don't always make sense
    "D104",
    # Pyright error codes are obnoxiously long. Ignore lint telling you to use them.
    "PGH003",
    # Documenting every file is a bit redundant for us.
    "D100",
    # No point in documenting magic methods.
    "D105",
    # Makes more sense to use `Parameters` in the main class instead of in the `__init__` .
    "D107",
    # We do not need cryptographically secure random functions.
    "S311",
]
line-length = 100
target-version = "py312"

[tool.ruff.per-file-ignores]
"**/test__*.py" = ["S101", "PLR2004"]
"examples/**/*.py" = ["INP001"]

[tool.ruff.pydocstyle]
convention = "numpy"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
